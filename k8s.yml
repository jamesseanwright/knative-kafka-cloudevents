apiVersion: v1
kind: Service
metadata:
  name: test-events
spec:
  type: ClusterIP
  selector:
    service: test-events
  ports:
    - name: kafka
      protocol: TCP
      port: 9092
      targetPort: 9092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
  labels:
    component: kafka
spec:
  replicas: 1 # TODO: shard by partitions
  selector:
    matchLabels:
      component: kafka
  template:
    metadata:
      labels:
        component: kafka
        service: test-events
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - localhost

            # This second entry is required as the producer
            # and consumer, which sit in their own pods,
            # connect to Kafka via the DNS name computed by
            # K8s, and Kafka itself uses the java.net package
            # to resolve its own IP (127.0.0.1 in this case)
            # for the requested hostname
            - test-events
      containers:
        - name: kafka
          image: bitnami/kafka:3.6.1
          ports:
            - containerPort: 9092
              hostPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_LISTENERS
              value: CLIENT://:9092
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: CLIENT:PLAINTEXT
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: CLIENT://test-events:9092
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: CLIENT
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: localhost:2181
            - name: ALLOW_PLAINTEXT_LISTENER
              value: "yes"
          readinessProbe:
            exec:
              command:
                - kafka-topics.sh
                - --list
                - --bootstrap-server
                - localhost:9092
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10

        - name: zookeeper
          image: bitnami/zookeeper:3.8.3
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer-deployment
  labels:
    component: producer
spec:
  replicas: 1
  selector:
    matchLabels:
      component: producer
  template:
    metadata:
      labels:
        component: producer
        service: test-events
    spec:
      containers:
        - name: producer
          image: knative-kafka-cloudevents-producer:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_BROKER
              value: test-events:9092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-deployment
  labels:
    component: consumer
spec:
  replicas: 3 # TODO: HPA/scale to zero with Knative or an existing Kafka operator
  selector:
    matchLabels:
      component: consumer
  template:
    metadata:
      labels:
        component: consumer
        service: test-events
    spec:
      containers:
        - name: consumer
          image: knative-kafka-cloudevents-consumer:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_BROKER
              value: test-events:9092
